2.8.3 (October 6, 2024)
-----------------------

This release marks Enchant’s move from the aegis of the defunct AbiWord to
the personal care of Reuben Thomas, the current maintainer. Thanks to Hubert
Figuière, Enchant’s previous steward, for allowing this move, which enables
me (Reuben) to seek sponsorship for Enchant maintenance without confusion
over the project’s affiliation.

Code-wise, the two command-line utilities, enchant(1) and enchant-lsmod(1)
have been rewritten in Vala. All of Enchant’s core is now written in Vala;
the providers are still a polyglot of C, C++ and Objective C++.

Some minor fixes and improvements to the build system were made.

Missing NEWS was added for release 2.8.2.


2.8.2 (August 14, 2024)
-----------------------

This release prevents crashes in client applications that treat GLib
critical warnings as fatal. This affected recent versions of Epiphany, for
example. Enchant was misusing the GLib API g_return_val_if_fail in cases
that did not necessarily indicate programmer error.


2.8.1 (June 12, 2024)
---------------------

This release restores an optimization removed in 2.8.0 that reduces the
frequency with which personal wordlists are reloaded. This optimization
seemed to be unnecessary, as it had no effect on the test suite, but its
removal caused a significant slow-down for real-world use. Apologies to
those who are affected by this, and many thanks to the user who reported
this problem.


2.8.0 (May 26, 2024)
--------------------

This release adds the ability to use multiple dictionaries in the same
spell-checking session. This can be useful for checking multilingual text in
situations where passages or words cannot be marked as being in a particular
language (for example, plain text or Markdown), and for specialised texts
where a subject-specific dictionary is useful. The functionality is based on
the Google Summer of Code “composite dictionary” project by Vidhoon
Vishwanathan from 2013; a big thanks to him for his work! I have simplified
his original design, and the implementation in Vala is entirely mine, so he
is not to blame for any faults it may have in its current form.

Multiple dictionaries are specified by a change to the dictionary tag
format: most of Enchant’s APIs and its command-line front-end now accept a
comma-separated list of tags. (This means of course that commas may no
longer be used in dictionary tags; but until recently that was not allowed
in any case.)

A minor change has been made to an existing API: enchant_dict_suggest is now
specified to return an empty list when there are no suggestions. This makes
it easier to distinguish an error (when NULL is returned) from there simply
being no suggestions. While this is formally an API change, I am not
incrementing the major library version as in fact this API was already able
to return an empty list; and in any case, callers were unlikely to rely on
the list being non-empty.

The Doxygen documentation has been greatly improved: documentation of
internal code has been removed, while the public C and C++ header files are
now clearly documented (in particular, the Doxygen documentation did not
previously contain proper documentation for the C header file). The
documentation of the C API has also been improved in several places.

The test suite files have been renamed with shorter, less redundant names,
to make them easier to navigate.

Some minor improvements to and simplifications of the build system and code
have also been made.


2.7.3 (April 27, 2024)
----------------------

This release is made with Vala 0.56.17 (previous versions were made with
0.56.0). This works around a bug in `valac` that generates code which causes
an error in GCC >=14 and Clang >= 16.


2.7.2 (April 27, 2024)
----------------------

This release fixes a bug introduced in version 2.7.0. when calling
providers’ check methods, that could cause a crash.


2.7.1 (April 25, 2024)
----------------------

This release fixes some build-system bugs that crept into 2.7.0. Thanks to
those who reported them and helped me diagnose them. In particular, building
without --enable-relocatable is fixed. Some minor long-standing bugs that
recently came to light with incorrect include paths were also fixed.

Detection of the user’s language has been updated to use a more modern and
standard method. This means that in particular the LANG environment variable
no longer overrides the LC_ALL and LC_MESSAGES environment variables, and
support is added for the LANGUAGE variable, which has highest priority. For
more details, see the documentation for the GLib function
g_get_language_names.

Minor code and documentation improvements were made.


2.7.0 (April 19, 2024)
----------------------

This release marks a major improvement in Enchant’s maintainability: the
main library has been translated into Vala, a modern object-oriented
language with automatic memory management that, like Enchant, is based on
GLib.

Developers and packagers need not worry: this release is API and
ABI-compatible with previous releases (with some minor changes, noted below,
that is unrelated to the use of Vala), and you do not even need a Vala
compiler to build it, thanks to Automake, which distributes the C source
files generated by the Vala compiler. The build-time and run-time
dependencies therefore remain unchanged.

The library code is 33% smaller, and the total code-base has reduced
by 12%. Thanks in particular to Vala’s more modern string and collection
handling, I anticipate it being much easier to add functionality in future.
The use of Vala may also be extended in future to those provider back-ends
written in C.

The provider API is now declared private. No third-party providers have been
available for Enchant for many years to my knowledge, and the only new
provider in the last ten years, Nuspell, was implemented by Nuspell’s
authors in Enchant. The provider interface has changed in this release; and
of course all the current providers have been updated, including the
still-experimental Zemberek provider.

There is a small change to the semantics of dictionaries: in the past,
requesting a dictionary with the same language tag twice from a given
provider returned the same dictionary object. This is no longer the case.
This allows an application to have multiple active spelling sessions with
the same broker object in any given language. Applications that relied on
this functionality must in future keep track of the identity of spelling
sessions themselves. I do not regard this as an API/ABI change, since it was
only documented in a vague way by saying that dictionaries were
“reference-counted”. This language has been removed from the documentation.

Finally, a big thank-you to Eric Scott Albright, who wrote the test suite,
and SIL, for funding his work. Enchant has an excellent test suite; one of
my first contributions to the project was to get the test suite running on
all platforms, as it was originally written just for Windows. It’s an
impressive set of tests that covers a huge range of normal and edge cases,
and has often saved me before now; but it has never been more valuable than
when rewriting the entire core library. Hopefully it has kept the number of
new bugs I’ve introduced to a minimum!


2.6.9 (April 4, 2024)
---------------------

This release implements user dictionary support for Nuspell, Voikko and
Hspell. Users can install dictionaries in the appropriate sub-directory of
their Enchant user settings directory, and they will be found by the
spelling providers. (Hunspell is already supported; Aspell support is
planned.)


2.6.8 (March 22, 2024)
----------------------

This release better documents the limited capabilities Enchant currently has
for user-installed dictionaries.


2.6.7 (February 8, 2024)
------------------------

This version fixes an error introduced in the previous version that caused the Hunspell provider to fail on startup. Apologies!


2.6.6 (February 4, 2024)
------------------------

This version fixes the implementation and documentation of system paths for
configuration files (enchant.ordering). Since version 2.6.4, the wrong path
was searched for pkgdatadir: not, for example /usr/share/enchant-2, as
documented, but the old path /usr/share/enchant. The enchant(5) man page
referred to “DATADIR” rather than the actual configured path. The sysconfdir
location, typically /etc, was not documented.

Hunspell users should note that, contrary to the NEWS entry for 2.6.5, the
DICPATH environment variable cannot be used to specify the location of
hunspell dictionaries to Enchant. That is because it only works with the
hunspell program (which Enchant does not use), not the hunspell library.

Additional debug logging has been added for developers trying to diagnose
problems with configuration files and providers, which can be enabled at
run-time by setting the environment variable G_MESSAGES_DEBUG to
‘libenchant’.


2.6.5 (January 7, 2024)
-----------------------

This version permits error messages from spelling providers not to be valid
UTF-8. This allows error messages in particular about invalid UTF-8
characters in personal wordlists to be shown to the user. Developers take
note!

The --with-hunspell-dir configure option is removed (along with all the
other ---with-PROVIDER-dir options, which did nothing). Users who have
Hunspell dictionaries in non-standard locations should set the
Hunspell-specific environment variable DICPATH, or copy the dictionaries
into their user’s Enchant configuration directory (for example
~/.config/enchant/hunspell).

Doxygen API documentation is now included in the release tarball (it is also
now available online).


2.6.4 (December 11, 2023)
-------------------------

This version makes pkgdatadir versioned by default.


2.6.3 (December 2, 2023)
------------------------

This version fixes a bug in the tests when pkgdatadir is set to a
non-default value, and clarifies the documentation for setting pkgdatadir.


2.6.2 (October 28, 2023)
------------------------

This version documents exclude files: each personal word list is paired with
an exclude file that contains words the user considers invalid.


2.6.1 (September 24, 2023)
--------------------------

This version tweaks normalization of language tags so that only the part of
the tag that specifies country and language is altered; any extra that is
not removed is left alone. This fixes the use case for Aspell dictionaries
that was fixed in the Aspell backend in 2.6.0. Thanks again to Abdul-Lateef
Haji-Ali for the report and help with the fix.


2.6.0 (September 24, 2023)
--------------------------

This version removes validation of language tags; dictionary names no longer
have to be valid language tags. This is because dictionaries in the wild
sometimes are sometimes not named with valid tags, and so are not visible to
Enchant. Programs that use Enchant will have to cope with this, for the
purposes of working out which languages are supported; but it should not a
big deal, as Enchant already accepted valid language tags with extra stuff
on the end, such as “en_GB-ize”.

Debug output now uses GLib’s debug system, and can be enabled at run-time by
setting the environment variable G_MESSAGES_DEBUG to ‘libenchant’. If you
have had problems understanding why Enchant is not using the spelling
provider you expect, now’s the time to get in touch via the issue tracker
and see if we can work out what’s going on!

The Aspell back-end has a fix to let it work with language variants such as
“en_GB-ize”. Thanks to Abdul-Lateef Haji-Ali for this fix!

There’s more code clean-up, build system updates, and a couple of null
pointer dereference fixes (thanks, GCC!).


2.5.0 (May 23, 2023)
--------------------

This version simplifies the handling of personal wordlists. End-users should
not notice much difference, but internally the code has been considerably
simplified.

There are three developer-visible changes:

  * A new dictionary method remove_from_session() allows providers to stay
    in sync with Enchant’s personal wordlist, by removing as well as adding
    words in the spelling session.
  * The public API enchant_dict_store_replacement() is deprecated, and no
    longer does anything. It only previously had an effect with the Aspell
    provider.
  * The APIs enchant_dict_add() and enchant_dict_remove() also respectively
    add the word to the session or remove it.

Note that these changes do not affect the public ABI, which only uses
pointers to dictionary objects (it does change the provider ABI, but as far
as the maintainers know, there are no 3rd-party providers).

There are three main changes under the hood.

First, Enchant’s mechanism for generating suggestions from personal
wordlists is removed. This mechanism was complicated, would generate
suggestions in a different way from each provider, and was unlikely to work
well for many languages. Instead, support has been improved for supplying
words from the user’s personal wordlist to the provider, so that it can
include them in suggestions. This is supported by the Aspell and Hunspell
backends.

Second, Enchant’s support for provider-specific wordlists has been removed.
Of the known providers, only Aspell used this support, and only partially.
This was likely to be confusing: for example, words could be added to the
Aspell, but not removed, so Aspell’s personal wordlist could get out of sync
with Enchant’s. The relevant dictionary methods have been removed.

Finally, as mentioned above, adding a word to the personal wordlist also
adds it to the session, and removing it also removes it from the session.
This keeps the session and personal wordlist in sync automatically.


2.4.0 (May 22, 2023)
--------------------

This version contains no user-visible changes.

Add a new API enchant_broker_request_dict_with_pwl, so that it’s possible to
specify a personal wordlist in a normal spelling session.

This makes it possible to rewrite the enchant program to use only public
APIs, thus making a cleaner separation between front-end and library.


2.3.4 (February 19, 2023)
-------------------------

Document the personal wordlist format.

Improve the man pages in various ways, and make online versions, now linked
from the web site.

Fix some potential crashes (double-free and NULL dereferences).

Update the build system to use autoconf 2.71.


2.3.3 (April 16, 2022)
----------------------

Update Nuspell provider, requiring Nuspell 5.1.0. The new provider takes
advantage of recently-added Nuspell APIs to be smaller and simpler.

Fix the C++ API is_added() method to return a boolean rather than void.

Require C99 and POSIX 2008, and as a result use fewer gnulib modules,
which gives a modest build time reduction.


2.3.2 (November 16, 2021)
-------------------------

Fix the generation of man pages, so that installation-dependent paths are
correctly inserted.

Improve error reporting when enchant-lsmod cannot open a dictionary for a
given language, in particular with the Aspell backend.

Fix compilation on MingW.

Some minor code cleanup.


2.3.1 (August 9, 2021)
----------------------

Hunspell: fix enchant_dict_get_extra_word_characters API so it always
returns UTF-8. Use the same limit on word length as Hunspell uses (it is
different for UTF-8). Drop support for Hunspell 1.4.

Ignore hidden files when loading provider modules.

In a slight update to a change introduced in 2.3.0, in the default
enchant.ordering file, do not prefer aspell for all “en” locales, only for
the specific “en” locales that it supports.


2.3.0 (June 14, 2021)
---------------------

Add -p flag to enchant.

Allow personal wordlist APIs (enchant_pwl_*) to take -1 as the length of the
word, as the enchant_dict_* APIs already allowed.

Add documentation to enchant_provider.h.

Make Aspell the default backend for English locales it supports, as it is
much quicker than Hunspell in this case and achieves slightly better
results.

Require nuspell version 4.1.0 or later.


2.2.15 (December 22, 2020)
--------------------------

Specify that nuspell >= 4.1.0 is required.

Fix some space leaks in the tests.


2.2.14 (December 10, 2020)
--------------------------

Improve installation instructions: in particular, add a note about where to
find them to README.

The nuspell backend is updated for newer versions.


2.2.13 (November 2, 2020)
-------------------------

Make the enchant program output its version to standard output, not standard
error. This may help some programs that use this output.


2.2.12 (October 15, 2020)
-------------------------

Fix a bug in the Voikko and Zemberek back-ends that could cause spell
checking and suggestion to fail. (For programmers: enchant_dict_check and
enchant_dict_suggest allow counted strings, but those two backends were
assuming the strings were NUL-terminated.)


2.2.11 (September 7, 2020)
--------------------------

Make enchant silently ignore -B flag, for better Emacs compatibility.

Make enchant_broker_list_dicts sort the tags, so that enchant-lsmod’s output
is sorted.

Minor build system improvement: don’t use -D_FORTIFY_SOURCE, which can cause
problems on Windows, and should be configured by the compiler vendor if
desired.


2.2.10 (September 1, 2020)
--------------------------

Fix Hunspell backend to treat apostrophes as Hunspell does: if either
straight or curly apostrophe is a word character, allow both.


2.2.9 (July 29, 2020)
---------------------

Fix a couple of space leaks in the Nuspell back end (thanks, ASAN).


2.2.8 (February 27, 2020)
-------------------------

Add a provider back-end for Nuspell (thanks, Sander van Geloven). Nuspell is
a new spell-checker whose development has been supported by the Mozilla
foundation. It is backwards-compatible with Hunspell and Myspell
dictionaries, while supporting a wider range of language peculiarities,
improved suggestions, and easier maintainability of the code-base.

Doxygen documentation generation is now supported for Enchant (thanks,
Sander van Geloven).

The command-line parsing of the “enchant” program has been made more
friendly and reliable. The -L flag (show line numbers), which had not been
working for some time, has been fixed.

A buffer overflow in personal wordlist handling has been fixed.

Minor improvements were made to the tests (thanks, Sander van Geloven).


2.2.7 (September 9, 2019)
-------------------------

Fix some memory leaks in the hunspell and aspell providers, thanks to an
improvement to the build system to use ASAN for the tests.


2.2.6 (September 5, 2019)
-------------------------

Treat PWL as text, not binary.


2.2.5 (June 30, 2019)
---------------------

Fix a memory leak in the hunspell provider.


2.2.4 (June 17, 2019)
---------------------

Fix a bug in the enchant program, where words ending in non-ASCII characters
were truncated during tokenization.


2.2.3 (February 4, 2018)
------------------------

Fix the previous release’s fix. Sigh.


2.2.2 (February 3, 2018)
------------------------

Fix a bug in the build system where the test harness would try to delete
files under root, typically the system libraries.


2.2.1 (January 3, 2018)
-----------------------

This release fixes a crash on invalid input with the hspell backend, removes
some bashisms from the build system, updates the Free Software Foundation’s
street address, and stops running some tests that fail on recent macOS
(pending a fix).


2.2.0 (December 11, 2017)
-------------------------

This release improves support for parallel installation with other major
versions of Enchant (specifically for man pages), fixes relocation support,
which only partly worked (thanks to Sandro Mani), and makes minor
documentation improvements and fixes a potential crash in the hspell
back-end.


2.1.3 (November 26, 2017)
--------------------------

This release adds support for parallel installation with other major
versions of Enchant, and fixes a crash in the Voikko provider when it has no
supported languages.


2.1.2 (September 28, 2017)
--------------------------

This release adds support for languages other than Finnish to the voikko
provider, from Børre Gaup.


2.1.1 (September 8, 2017)
-------------------------

This release changes no code, but makes the soname of libenchant match the
version number more obviously, as well as changing the way it is calculated
to better match libtool’s versioning rules.


2.1.0 (August 7, 2017)
----------------------

This is a minor feature release. It adds the -word-chars flag to
enchant-lsmod, for a convenient way for other programs to get the extra word
characters for a particular dictionary.

A man page for enchant-lsmod is also now provided.

A little more code cleanup has been done, in particular by upstreaming
gnulib patches.


2.0.0 (August 4, 2017)
----------------------

The major version number has been incremented owing to API/ABI changes, but
in practice upgrading from 1.6.x should be easy.

Previously-deprecated APIs have been removed.

The little-used enchant_broker_get/set_param calls have been removed.

Some trivial API changes have been made to fix otherwise-unavoidable
compilation warnings both in libenchant and in application code. This is
strictly an ABI change (although the ABI may not actually have changed,
depending on the platform).

The provider API has been changed slightly: enchant_get_user_language is now
a documented public API (before it was marked private, but it has in fact
been exported for some years). enchant_get_user_config_dirs is now
enchant_get_user_config_dir, and returns only a single directory.

The plethora of configuration options previously available has been
rationalised and documented. In particular, support for relocation (so that
Enchant, or an application of which it is part, can be installed anywhere in
a filing system) has been rewritten and documented (see INSTALL).

The Myspell backend has been renamed to Hunspell to match the upstream
project. Users with their own enchant.ordering files will need to change
“myspell” to “hunspell”.


1.6.1 (February 6, 2017)
------------------------

Improvements to the enchant-ispell front-end, which is now a working ispell replacement.
Unit tests run on all platforms.
Various bug fixes and code clean-up.


1.6.0 (April 1, 2010)
---------------------

Fix bug 12567: the ispell sources aren't licensed under the LGPL
Add a function to get enchant's version (enchant_get_version)
Disable zemberek plugin by default, as it's known to cause issues/crashes with WebKit
Fix bug 12472: Win32 DLL dependency not found popup occurs when module has unmet dependencies
Possibly fix Ubuntu bug 474062
Fix bug 12409: Registry handle not closed in enchant_get_registry_value_ex
Fix bug 12406: Leak in _enchant_get_user_home_dirs() on Windows
Fix bug 12007: Update FSF address
Fix bug 12305: Zemberek module lists a Turkish dictionary even without Zemberek installed
Don't assert if passed a null string list
Fix bug 12350: enchant_pwl_init_with_file truncates pwl file
Fix a double-free memory corruption bug
Fix bug 12173: fix some small memory leaks
Fix bug 12174: mis-acceptence of dictionaries which start with a partial match of the lang id
Fix bug 12160: enchant 1.5.0 always looks in "lib" dir for plugins
Fix the build with the MSVC compiler
Add a --with-system-myspell option
Package missing compile-resource file
Compare paths ignoring case sensitivity on windows


1.5.0 (May 23, 2009)
--------------------

(News missing!)


1.4.2 (May 5, 2008)
-------------------

Voikko (Finnish) language support
Zemberek (Turkish) language support
Better support for Unicode in the personal dictionaries
Personal dictionaries offer better suggestions
Use OpenOffice's dictionaries on Windows
Aspell works on Windows
Can use a system-wide Hunspell/Myspell installation on Unix-like platforms
Require Hunspell 1.2.1
.NET bindings
More lax language matching rules (eg. if you request a "pl" dictionary, but
only have a "pl_PL" myspell dictionary installed, it will do the right
thing)
Use XDG's data-dirs spec for locating dictionaries (eg. ~/.config/enchant/myspell/)
Lots of unit tests
Lots of bug fixes


0.4.0
-------------------
Ispell-like command line interface


0.3.0
-------------------
Better Aspell detection
Aspell backend sync's dictionary lists to disk
Ispell crash fixes
Myspell crash fixes
Refined C++ API/ABI
Refined C ABI
Implemented some new APIs
Better implemented some internals


0.2.0
-------------------
Myspell support
Better Uspell support
Ability to enumerate providers
Win32 support


0.1.0
-------------------
Initial Release
Aspell/Pspell support
Ispell support
Uspell support
Ability to order dictionaries/providers
